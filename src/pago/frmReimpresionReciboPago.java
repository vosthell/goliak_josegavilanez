/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmReimpresionReciboPago.java
 *
 * Created on 09/03/2013, 02:22:41 PM
 */
package pago;

import clases.clsAuditoria;
import clases.clsCtasCobrar;
import clases.clsPago;
import clases.clsParametros;
import clases.clsUtils;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class frmReimpresionReciboPago extends javax.swing.JInternalFrame {
   clsPago objPago = new clsPago();
   clsCtasCobrar objCtasCobrar = new clsCtasCobrar();
   clsUtils objUtils = new clsUtils();
   clsAuditoria objAuditoria = new clsAuditoria();
   clsParametros objParametros = new clsParametros();
   
    /** Creates new form frmReimpresionReciboPago */
    public frmReimpresionReciboPago() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        rbNE = new javax.swing.JRadioButton();
        rbFactura = new javax.swing.JRadioButton();
        rbOtros = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMotivo = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(stinventario.STInventarioApp.class).getContext().getResourceMap(frmReimpresionReciboPago.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        buttonGroup1.add(rbNE);
        rbNE.setSelected(true);
        rbNE.setText(resourceMap.getString("rbNE.text")); // NOI18N
        rbNE.setName("rbNE"); // NOI18N

        buttonGroup1.add(rbFactura);
        rbFactura.setText(resourceMap.getString("rbFactura.text")); // NOI18N
        rbFactura.setName("rbFactura"); // NOI18N

        buttonGroup1.add(rbOtros);
        rbOtros.setText(resourceMap.getString("rbOtros.text")); // NOI18N
        rbOtros.setName("rbOtros"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        txtCodigo.setText(resourceMap.getString("txtCodigo.text")); // NOI18N
        txtCodigo.setName("txtCodigo"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        txtMotivo.setColumns(20);
        txtMotivo.setRows(5);
        txtMotivo.setName("txtMotivo"); // NOI18N
        jScrollPane1.setViewportView(txtMotivo);

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbOtros)
                    .addComponent(rbFactura)
                    .addComponent(rbNE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE))))
                .addGap(27, 27, 27))
            .addGroup(layout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(jButton1)
                .addContainerGap(162, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(rbNE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbFactura)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbOtros)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    String tipo = "";
    if(rbNE.isSelected())
    {
        reimpresionPagoNE(Integer.parseInt(txtCodigo.getText()));
        tipo = "NE";
    }    
    if(rbFactura.isSelected())
    {
        reimpresionPagoFactura(Integer.parseInt(txtCodigo.getText()));
        tipo = "FACTURA";
    }
    if(rbOtros.isSelected())
    {
        reimpresionPagoFactura(Integer.parseInt(txtCodigo.getText()));
        tipo = "OTROS";
    }
    objPago.registroReimpresion(txtCodigo.getText(), txtMotivo.getText().toString(), tipo);
    
    objAuditoria.insertarAuditoria("frmReimpresionReciboPago", "REIMPRESION RECIBO PAGO: "+ txtCodigo.getText() +"-"+txtMotivo.getText().toString(), "3");
    txtCodigo.setText("");  
    txtMotivo.setText("");   
}//GEN-LAST:event_jButton1ActionPerformed

    public void reimpresionOtros(int pv_idPago)
    {
        FileWriter fichero = null;
    PrintWriter pw = null;
    ArrayList<clsPago> dataPago = objPago.consultaDataPagoDetalleOtros(pv_idPago);
    try
    {
        //ACTUALIZAR DATOS DEL PAGO
        //OBTENER IDCAJAOPERACION ACTUAL, OSEA QUE  NO ESTA CERRADA
        //String idCajaAbierta = objCaja.obtenerCajaAbierta(main.idUser);
        //objPago.actualizarDataPagoOtros(idPago_publica, idCajaAbierta, main.idUser);
        //RESTAR SALDO
        //ACTUALIZAR SALDO
        dataPago = objPago.consultaDataPagoDetalleOtros(pv_idPago);
        int idCtaCobrar = dataPago.get(0).getIdCtaCobrar();
        Double valor = dataPago.get(0).getValor();
        String fecha_cobro = dataPago.get(0).getFechaCobro().substring(0, 16);   
        
        //objCtasCobrar.actualizarSaldoNuevo(idCtaCobrar, objUtils.redondear(valor));
         //OBTENER SALDO SI SALDO ES  CERO CANCELO DEUDA
        //String saldo = objCtasCobrar.consultarSaldoCta(""+idCtaCobrar);
        //if(saldo.equals("0")||saldo.equals("0.00"))
        //{
            //REGISTRAR QUE FECHA QUEDO CANCELADO O EN CERO
            //objCtasCobrar.registrarCancelacionNuevo(idCtaCobrar);
        //}    
        
        fichero = new FileWriter(objUtils.HostSystem + objUtils.archivoPrint);
        /******************************************************************************************/
        pw = new PrintWriter(fichero);                                                           //*  
        pw.println(objParametros.consultaValor("print_pago_linea1") + "RECIBO DE COBRO/NE");
        pw.println(objParametros.consultaValor("print_pago_linea2") + "NÂ° " + pv_idPago);
        pw.println(objParametros.consultaValor("print_pago_linea3"));
        pw.println(objParametros.consultaValor("print_pago_linea4"));
        pw.println(objParametros.consultaValor("print_pago_linea5"));
        pw.println(objParametros.consultaValor("print_pago_linea6"));
        //pw.println("");
        //35 lineas
        /********************CABECERA**********/
        pw.println("");
        pw.println("");
       
        pw.println("RECIBI DE : " + dataPago.get(0).getNombreCliente());
        pw.println("LA CANTIDAD DE: " + valor + " ***DOLARES");
        pw.println("POR CONCEPTO DE: " + dataPago.get(0).getReferencia());
        pw.println("");
        /******************************************************************************************/
        pw.println(objParametros.consultaValor("print_pago_linea7") +" " + fecha_cobro);
        pw.println("");
        pw.println("");
        pw.println("");
        pw.println("");
        pw.println("");
        pw.println("");
             
        //cuadrarlo a cierto numero de caracteres
        String nombre = "";
        if(dataPago.get(0).getNombreCliente().toString().length()>30)
            nombre = dataPago.get(0).getNombreCliente().toString().substring(0, 30);
        else
        {
            nombre = dataPago.get(0).getNombreCliente();
            do{
                nombre = nombre + " ";
            }while(nombre.length()<30);
           
        }       
        //Nombre cobrador
        String nombreUsuario = "";
        if(dataPago.get(0).getNombreCobrador().toString().length()>30)
            nombreUsuario = dataPago.get(0).getNombreCobrador().toString().substring(0, 30);
        else
        {
            nombreUsuario = dataPago.get(0).getNombreCobrador();
            do{
                nombreUsuario = nombreUsuario + " ";
            }while(nombreUsuario.length()<30);
           
        }       
        /******************************************************************************************/
        pw.println("------------------------------              -----------------------------");
        pw.println("      FIRMA DEL CLIENTE                         FIRMA DEL RECAUDADOR");
                    /****************************/              /****************************/
        pw.println(nombre + "              " + nombreUsuario);
        pw.println("");
        pw.println("Generado por: " + dataPago.get(0).getNombreUsuario());
        pw.println("");
        pw.println("IMPORTANTE: Estimado usuario, por favor guarde este recibo, es el unico ");
        pw.println("comprobante que Ud. tiene para confirmar su pago realizado.");
        pw.println("");
        Runtime aplicacion = Runtime.getRuntime(); 
        aplicacion.exec("cmd.exe /K "+ objUtils.HostSystem + objUtils.archivoImprimir3); 
        
        
    }
    catch (Exception e) 
    {
        System.out.println(e.toString());
        e.printStackTrace();
    } 
    finally 
        {
           try {
           // Nuevamente aprovechamos el finally para 
           // asegurarnos que se cierra el fichero.
           if (null != fichero)
              fichero.close();
           } catch (Exception e2) {
              System.out.println(e2.toString());
              //e2.printStackTrace();
           }
        }
    /*ABRIR LA CAJA, MANDO A IMPRIMIR CODIGO ESPECIAL A LA IMPRESORA TMU*/
        FileWriter fichero2 = null;
        PrintWriter pw2 = null;
        try
        {
            
            fichero2 = new FileWriter(objUtils.HostSystem + objUtils.archivoPrint2);
            pw2 = new PrintWriter(fichero2);
            byte[] bit = new byte[1];
            bit[0] = (byte)27;
            String a = new String(bit);
            //byte[] bit = new byte[1];
            bit[0] = (byte)112;
            String b = new String(bit);            
            pw2.println(a + b + 0);
            /*******ABRIR CAJON****/
            Runtime aplicacion2 = Runtime.getRuntime();             
            aplicacion2.exec("cmd.exe /K "+ objUtils.HostSystem + objUtils.abrirCaja); 
        } 
        catch (Exception e) 
        {
            System.out.println(e.toString());
            e.printStackTrace();
        } 
        finally 
        {
           try {
           // Nuevamente aprovechamos el finally para 
           // asegurarnos que se cierra el fichero.
           if (null != fichero2)
              fichero2.close();
           } catch (Exception e2) {
              System.out.println(e2.toString());
              //e2.printStackTrace();
           }
        }
        /*FIN - ABRIR LA CAJA, MANDO A IMPRIMIR CODIGO ESPECIAL A LA IMPRESORA TMU*/
        JOptionPane.showMessageDialog(this, "Pago reimpreso con Ã©xito", "AtenciÃ³n!", JOptionPane.INFORMATION_MESSAGE);
        
    }

    public void reimpresionPagoFactura(int pv_idPago)
    {
        FileWriter fichero = null;
        PrintWriter pw = null;
        ArrayList<clsPago> dataPago = objPago.consultaDataPagoDetalleFactura(pv_idPago);
        try
        {
            //ACTUALIZAR DATOS DEL PAGO
            //OBTENER IDCAJAOPERACION ACTUAL, OSEA QUE  NO ESTA CERRADA
            //String idCajaAbierta = objCaja.obtenerCajaAbierta(main.idUser);
            //objPago.actualizarDataPagoFactura(idPago_publica, idCajaAbierta, main.idUser);
            dataPago = objPago.consultaDataPagoDetalleFactura(pv_idPago);
            //RESTAR SALDO
            //ACTUALIZAR SALDO
            int idCtaCobrar = dataPago.get(0).getIdCtaCobrar();    
            Double valor = dataPago.get(0).getValor();
            String fecha_cobro = dataPago.get(0).getFechaCobro().substring(0, 16);   

            objCtasCobrar.actualizarSaldoFacturasNuevo(idCtaCobrar, objUtils.redondear(valor));
            //OBTENER SALDO SI SALDO ES  CERO CANCELO DEUDA
            Double saldo = objCtasCobrar.consultarSaldoCtaFactura("" + idCtaCobrar);
            if((saldo == 0)||(saldo==0.00)||(saldo<0))
            {
                //REGISTRAR QUE FECHA QUEDO CANCELADO O EN CERO
                objCtasCobrar.registrarCancelacionDeudaFacturaNuevo(idCtaCobrar);
            }       
            System.out.println(valor);
            fichero = new FileWriter(objUtils.HostSystem + objUtils.archivoPrint);
            /******************************************************************************************/
            pw = new PrintWriter(fichero);                                                           //*  
            pw.println("            RIZZO MUÃOZ JORGE EUCLIDES                   RECIBO DE COBRO/FACTURA");
            pw.println("              COMISARIATO SUPER TODO		        NÂ° " + pv_idPago);
            pw.println("              R.U.C.: 1200012613-001");
            pw.println("   MATRIZ: JOSE ALAVEDRA SL. 1 Y MIGUEL ALCIVAR");
            pw.println("ESTABLECIMIENTO: ROCAFUERTE # 617 Y NUEVE DE OCTUBRE");
            pw.println("        TELF.: 099-242-4196 * LOS RIOS - ECUADOR");
            //pw.println("");
            //35 lineas
            /********************CABECERA**********/
            pw.println("");
            pw.println("");

            pw.println("RECIBI DE : " + dataPago.get(0).getNombreCliente());
            pw.println("LA CANTIDAD DE: " + valor + " ***DOLARES");
            pw.println("POR CONCEPTO DE: " + dataPago.get(0).getReferencia());
            pw.println("CODIGO FACTURA: " + dataPago.get(0).getIdCabeceraMovi());
            pw.println("CODIGO DEUDA: " + dataPago.get(0).getIdCtaCobrar());
            if (saldo<0)
                saldo = 0.00;
            pw.println("VALOR PENDIENTE: " + objUtils.redondear(saldo));
            pw.println("");
            /******************************************************************************************/
            pw.println("LUGAR/FECHA/HORA: BABA, " + fecha_cobro);
            //pw.println("");
            //pw.println("");
            pw.println("");
            pw.println("");
            pw.println("");

            //cuadrarlo a cierto numero de caracteres
            String nombre = "";
            if(dataPago.get(0).getNombreCliente().toString().length()>30)
                nombre = dataPago.get(0).getNombreCliente().toString().substring(0, 30);
            else
            {
                nombre = dataPago.get(0).getNombreCliente();
                do{
                    nombre = nombre + " ";
                }while(nombre.length()<30);

            }       
            //NOMBRE DEL COBRADOR
            String nombreUsuario = "";
            if(dataPago.get(0).getNombreCobrador().toString().length()>30)
                nombreUsuario = dataPago.get(0).getNombreCobrador().toString().substring(0, 30);
            else
            {
                nombreUsuario = dataPago.get(0).getNombreCobrador();
                do{
                    nombreUsuario = nombreUsuario + " ";
                }while(nombreUsuario.length()<30);

            }       
            /******************************************************************************************/
            pw.println("------------------------------              -----------------------------");
            pw.println("      FIRMA DEL CLIENTE                         FIRMA DEL RECAUDADOR");
                        /****************************/              /****************************/
            pw.println(nombre + "              " + nombreUsuario);
            pw.println("");
            pw.println("Generado por: " + dataPago.get(0).getNombreUsuario());
            pw.println("");
            pw.println("IMPORTANTE: Estimado usuario, por favor guarde este recibo, es el unico ");
            pw.println("comprobante que Ud. tiene para confirmar su pago realizado.");
            pw.println("");
            Runtime aplicacion = Runtime.getRuntime(); 
            aplicacion.exec("cmd.exe /K "+ objUtils.HostSystem + objUtils.archivoImprimir3); 


        }
        catch (Exception e) 
        {
            System.out.println(e.toString());
            e.printStackTrace();
        } 
        finally 
            {
               try {
               // Nuevamente aprovechamos el finally para 
               // asegurarnos que se cierra el fichero.
               if (null != fichero)
                  fichero.close();
               } catch (Exception e2) {
                  System.out.println(e2.toString());
                  //e2.printStackTrace();
               }
            }

        /*ABRIR LA CAJA, MANDO A IMPRIMIR CODIGO ESPECIAL A LA IMPRESORA TMU*/
        FileWriter fichero2 = null;
        PrintWriter pw2 = null;
        try
        {

            fichero2 = new FileWriter(objUtils.HostSystem + objUtils.archivoPrint2);
            pw2 = new PrintWriter(fichero2);
            byte[] bit = new byte[1];
            bit[0] = (byte)27;
            String a = new String(bit);
            //byte[] bit = new byte[1];
            bit[0] = (byte)112;
            String b = new String(bit);            
            pw2.println(a + b + 0);
            /*******ABRIR CAJON****/
            Runtime aplicacion2 = Runtime.getRuntime();             
            aplicacion2.exec("cmd.exe /K "+ objUtils.HostSystem + objUtils.abrirCaja); 
        } 
        catch (Exception e) 
        {
            System.out.println(e.toString());
            e.printStackTrace();
        } 
        finally 
        {
           try {
           // Nuevamente aprovechamos el finally para 
           // asegurarnos que se cierra el fichero.
           if (null != fichero2)
              fichero2.close();
           } catch (Exception e2) {
              System.out.println(e2.toString());
              //e2.printStackTrace();
           }
        }
        /*FIN - ABRIR LA CAJA, MANDO A IMPRIMIR CODIGO ESPECIAL A LA IMPRESORA TMU*/
        JOptionPane.showMessageDialog(this, "Pago reimpreso con Ã©xito", "AtenciÃ³n!", JOptionPane.INFORMATION_MESSAGE);
    }

    public void reimpresionPagoNE(int pv_idPago)
    {      
            FileWriter fichero = null;
                        PrintWriter pw = null;
                        ArrayList<clsPago> dataPago = objPago.consultaDataPagoDetalle(pv_idPago);
                        try
                        {
                            //ACTUALIZAR DATOS DEL PAGO
                            //OBTENER IDCAJAOPERACION ACTUAL, OSEA QUE  NO ESTA CERRADA
                            //String idCajaAbierta = objCaja.obtenerCajaAbierta(main.idUser);
                            //objPago.actualizarDataPago(idPago_publica, idCajaAbierta, main.idUser);
                            dataPago = objPago.consultaDataPagoDetalle(pv_idPago);
                            //RESTAR SALDO
                            //ACTUALIZAR SALDO
                            int idCtaCobrar = dataPago.get(0).getIdCtaCobrar();
                            Double valor = dataPago.get(0).getValor();
                            System.out.println("Valor: " + valor);
                            String fecha_cobro = dataPago.get(0).getFechaCobro().substring(0, 16);   

                            objCtasCobrar.actualizarSaldoNuevo(idCtaCobrar, objUtils.redondear(valor));
                             //OBTENER SALDO SI SALDO ES  CERO CANCELO DEUDA
                            Double saldo = objCtasCobrar.consultarSaldoCta("" + idCtaCobrar);
                            System.out.println("Saldo: " + saldo);
                            if((saldo==0) || (saldo==0.00) ||(saldo<0))
                            {
                                //REGISTRAR QUE FECHA QUEDO CANCELADO O EN CERO
                                objCtasCobrar.registrarCancelacionNuevo(idCtaCobrar);
                            }    
                            System.out.println("Valor2:"+valor);
                            fichero = new FileWriter(objUtils.HostSystem + objUtils.archivoPrint);
                            /******************************************************************************************/
                            pw = new PrintWriter(fichero);                                                           //*  
                            pw.println("            RIZZO MUÃOZ JORGE EUCLIDES                        RECIBO DE COBRO/NE");
                            pw.println("              COMISARIATO SUPER TODO			NÂ° " + pv_idPago);
                            pw.println("              R.U.C.: 1200012613-001");
                            pw.println("   MATRIZ: JOSE ALAVEDRA SL. 1 Y MIGUEL ALCIVAR");
                            pw.println("ESTABLECIMIENTO: ROCAFUERTE # 617 Y NUEVE DE OCTUBRE");
                            pw.println("        TELF.: 099-242-4196 * LOS RIOS - ECUADOR");
                            //pw.println("");
                            //35 lineas
                            /********************CABECERA**********/
                            pw.println("");
                            pw.println("");

                            pw.println("RECIBI DE : " + dataPago.get(0).getNombreCliente());
                            pw.println("LA CANTIDAD DE: " + valor + " ***DOLARES");
                            pw.println("POR CONCEPTO DE: " + dataPago.get(0).getReferencia());
                            pw.println("CODIGO NE: " + dataPago.get(0).getIdCabeceraMovi());
                            pw.println("CODIGO DEUDA: " + dataPago.get(0).getIdCtaCobrar());
                            if (saldo<0)
                                saldo = 0.00;
                            pw.println("VALOR PENDIENTE: " + objUtils.redondear(saldo));
                            pw.println("");
                            /******************************************************************************************/
                            pw.println("LUGAR/FECHA/HORA: BABA, " + fecha_cobro);

                            //pw.println("");
                            //pw.println("");
                            pw.println("");
                            pw.println("");
                            pw.println("");

                            //cuadrarlo a cierto numero de caracteres
                            String nombre = "";
                            if(dataPago.get(0).getNombreCliente().toString().length()>30)
                                nombre = dataPago.get(0).getNombreCliente().toString().substring(0, 30);
                            else
                            {
                                nombre = dataPago.get(0).getNombreCliente();
                                do{
                                    nombre = nombre + " ";
                                }while(nombre.length()<30);

                            }       
                            //NOMBRE DEL COBRADOR
                            String nombreUsuario = "";
                            if(dataPago.get(0).getNombreCobrador().toString().length()>30)
                                nombreUsuario = dataPago.get(0).getNombreCobrador().toString().substring(0, 30);
                            else
                            {
                                nombreUsuario = dataPago.get(0).getNombreCobrador();
                                do{
                                    nombreUsuario = nombreUsuario + " ";
                                }while(nombreUsuario.length()<30);

                            }       
                            /******************************************************************************************/
                            pw.println("------------------------------              -----------------------------");
                            pw.println("      FIRMA DEL CLIENTE                         FIRMA DEL RECAUDADOR");
                                        /****************************/              /****************************/
                            pw.println(nombre + "              " + nombreUsuario);
                            pw.println("");
                            pw.println("Generado por: " + dataPago.get(0).getNombreUsuario());        
                            pw.println("");
                            pw.println("IMPORTANTE: Estimado usuario, por favor guarde este recibo, es el unico ");
                            pw.println("comprobante que Ud. tiene para confirmar su pago realizado.");
                            pw.println("");

                            Runtime aplicacion = Runtime.getRuntime(); 
                            aplicacion.exec("cmd.exe /K "+ objUtils.HostSystem + objUtils.archivoImprimir3); 


                        }
                        catch (Exception e) 
                        {
                            System.out.println(e.toString());
                            e.printStackTrace();
                        } 
                        finally 
                        {
                           try {
                           // Nuevamente aprovechamos el finally para 
                           // asegurarnos que se cierra el fichero.
                           if (null != fichero)
                              fichero.close();
                           } catch (Exception e2) {
                              System.out.println(e2.toString());
                              //e2.printStackTrace();
                           }
                        }

                        /*ABRIR LA CAJA, MANDO A IMPRIMIR CODIGO ESPECIAL A LA IMPRESORA TMU*/
                        FileWriter fichero2 = null;
                        PrintWriter pw2 = null;
                        try
                        {

                            fichero2 = new FileWriter(objUtils.HostSystem + objUtils.archivoPrint2);
                            pw2 = new PrintWriter(fichero2);
                            byte[] bit = new byte[1];
                            bit[0] = (byte)27;
                            String a = new String(bit);
                            //byte[] bit = new byte[1];
                            bit[0] = (byte)112;
                            String b = new String(bit);            
                            pw2.println(a + b + 0);
                            /*******ABRIR CAJON****/
                            Runtime aplicacion2 = Runtime.getRuntime();             
                            aplicacion2.exec("cmd.exe /K "+ objUtils.HostSystem + objUtils.abrirCaja); 
                        } 
                        catch (Exception e) 
                        {
                            System.out.println(e.toString());
                            e.printStackTrace();
                        } 
                        finally 
                        {
                           try {
                           // Nuevamente aprovechamos el finally para 
                           // asegurarnos que se cierra el fichero.
                           if (null != fichero2)
                              fichero2.close();
                           } catch (Exception e2) {
                              System.out.println(e2.toString());
                              //e2.printStackTrace();
                           }
                        }
                        /*FIN - ABRIR LA CAJA, MANDO A IMPRIMIR CODIGO ESPECIAL A LA IMPRESORA TMU*/   
          JOptionPane.showMessageDialog(this, "Pago reimpreso con Ã©xito", "AtenciÃ³n!", JOptionPane.INFORMATION_MESSAGE);
    }

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbFactura;
    private javax.swing.JRadioButton rbNE;
    private javax.swing.JRadioButton rbOtros;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextArea txtMotivo;
    // End of variables declaration//GEN-END:variables
}
