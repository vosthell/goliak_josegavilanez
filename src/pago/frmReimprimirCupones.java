/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pago;

import clases.clsCupones;
import clases.clsParametros;
import clases.clsUtils;
import index.main;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author ckaiser
 */
public class frmReimprimirCupones extends javax.swing.JInternalFrame {
    clsCupones objCupones = new clsCupones();
    clsUtils objUtils = new clsUtils();
    /**
     * Creates new form frmReimprimirCupones
     */
    public frmReimprimirCupones() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtIdDocumento = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtJustificacion = new javax.swing.JTextArea();

        setClosable(true);
        setIconifiable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(stinventario.STInventarioApp.class).getContext().getResourceMap(frmReimprimirCupones.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setName("jPanel1"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        txtIdDocumento.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtIdDocumento.setText(resourceMap.getString("txtIdDocumento.text")); // NOI18N
        txtIdDocumento.setName("txtIdDocumento"); // NOI18N

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        txtJustificacion.setColumns(20);
        txtJustificacion.setRows(5);
        txtJustificacion.setName("txtJustificacion"); // NOI18N
        jScrollPane1.setViewportView(txtJustificacion);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)
                    .addComponent(txtIdDocumento))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIdDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 43, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(txtIdDocumento.getText().equals("") || txtJustificacion.equals(""))
        {
           JOptionPane.showMessageDialog(this, "Ingrese correctamente la informaci칩n", "Atenci칩n!", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            String idDocumento = txtIdDocumento.getText();
            //CONSULTAR SI YA ESTA REIMPRESO
            String estado_reimpresion = objCupones.obtenerValorReimpresion(idDocumento);
            if(estado_reimpresion.equals("1"))
            {
               JOptionPane.showMessageDialog(this, "Ya est치 reimpreso", "Atenci칩n!", JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                //IMPRIMIR CUPONES
                FileWriter fichero = null;
                int idPago_publica = Integer.parseInt(idDocumento);
                PrintWriter pw = null;
                clsParametros objParametros = new clsParametros();

                ArrayList<clsCupones> dataCupones = objCupones.consultarDataCupones(idPago_publica); 
                int maxData = dataCupones.size();

                //dataCompras.get(i).getEstadoTramite()
                //FileWriter fichero2 = null;
               // PrintWriter pw2 = null;
                try
                {
                    fichero = new FileWriter(objUtils.HostSystem + "file00003.txt");


                    pw = new PrintWriter(fichero);
                    for(int i=0; i<maxData; i++)
                    {
                        pw.println(objParametros.consultaValor("print_factura_linea1"));
                        pw.println("CODIGO CUPON: " + dataCupones.get(i).getIdCupones());
                        pw.println("TIPO DOC: " + dataCupones.get(i).getTipoDocumento());
                        pw.println("SERIE DOC: " + dataCupones.get(i).getIdDocumento());
                        //pw.println("VALOR: $ " + valor);
                        pw.println("VALOR: $ REIMPRESION");
                        pw.println("FECHA: " + dataCupones.get(i).getFechaRegistro().substring(1, 16));

                        String detalle = "";
                        if(dataCupones.get(i).getNameCompleto().length()>25)
                            detalle = dataCupones.get(i).getNameCompleto().substring(0, 25);
                        else
                        {
                            detalle = dataCupones.get(i).getNameCompleto();
                            do{
                                detalle = detalle + " ";
                            }while(detalle.length()<25);
                        }
                        pw.println("CEDULA: " + dataCupones.get(i).getCedula());
                        pw.println("CLIENTE: " + detalle);
                        pw.println(dataCupones.get(i).getNumeroCupon() + " de " + maxData);
                        pw.println("");
                        pw.println("");
                        pw.println("");
                        pw.println("----------------------------------------");
                        pw.println("");
                        pw.println("");

                        //ACTUALIZAR ESTADO DE REIMPRESION
                        objCupones.registrarReimpresion(dataCupones.get(i).getIdCupones(), main.idUser, txtJustificacion.getText()); 

                    }
                    Runtime aplicacion = Runtime.getRuntime(); 
                    aplicacion.exec("cmd.exe /K "+ objUtils.HostSystem + objUtils.archivoImprimirCupones);           

                }
                catch (Exception e) 
                {
                    System.out.println(e.toString());
                    e.printStackTrace();
                } 
                finally 
                {
                   try {
                   // Nuevamente aprovechamos el finally para 
                   // asegurarnos que se cierra el fichero.
                   if (null != fichero)
                      fichero.close();
                   } catch (Exception e2) {
                      System.out.println(e2.toString());
                      //e2.printStackTrace();
                   }
                }
                JOptionPane.showMessageDialog(this, "Impresi칩n exitosa", "Atenci칩n!", JOptionPane.ERROR_MESSAGE);
        
            }//
        }//else
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtIdDocumento;
    private javax.swing.JTextArea txtJustificacion;
    // End of variables declaration//GEN-END:variables
}
