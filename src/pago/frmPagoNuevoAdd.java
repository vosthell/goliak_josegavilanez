/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmPagoAdd.java
 *
 * Created on 08-nov-2011, 10:25:57
 */
package pago;

import clases.clsAbono;
import clases.clsAuditoria;
import clases.clsCabecera;
import clases.clsCliente;
import clases.clsCtasCobrar;
import clases.clsPago;
import clases.clsPermisos;
import clases.clsReporte;
import clases.clsUtils;
import com.jidesoft.hints.ListDataIntelliHints;
import com.jidesoft.swing.SelectAllUtils;
import index.main;
import java.awt.Color;
import java.awt.Component;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import pos.frmFactDeudaShow;
import pos.frmFactHistoShow;
import pos.frmListClientes;

/**
 *
 * @author CKaiser
 */
public class frmPagoNuevoAdd extends javax.swing.JInternalFrame {
    clsCliente objCliente = new clsCliente();
    clsCtasCobrar objCtasCobrar = new clsCtasCobrar();
    clsPago objPago = new clsPago();
    clsAuditoria objAuditoria = new clsAuditoria();
    clsUtils objUtils = new clsUtils();
    clsReporte objReporte = new clsReporte();
    clsPermisos objPermisos = new clsPermisos();
    clsAbono objAbono = new clsAbono();
    clsCabecera objCabecera = new clsCabecera();
    
    DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
    Date fechaActual = new Date();
    
    public static String codigoCliente;
    Double saldoActual;
    /** Creates new form frmPagoAdd */
    MiModelo dtmData = new MiModelo();
    
    public frmPagoNuevoAdd() {
        initComponents();
        
        dtmData.addColumn("NÂº");        
        dtmData.addColumn("Factura Referencia Monica");
        dtmData.addColumn("Descripcion");
        dtmData.addColumn("Valor");
        dtmData.addColumn("Saldo");
        dtmData.addColumn("idCtaCobrar");
        dtmData.addColumn("idCabecera");
        dtmData.addColumn("TIPO DE DOCUMENTO");        
        dtmData.addColumn("INTERES");      
        List<String> dataCedula = objCliente.consultarCedulas(); 
        SelectAllUtils.install(txtCedula);
        ListDataIntelliHints intellihints = new ListDataIntelliHints(txtCedula, dataCedula);
        intellihints.setCaseSensitive(false);
        
       
        lblFechaActual.setText(""+df.format(fechaActual));
                
        tblData.setDefaultRenderer (Object.class, new colorFilaTable());
        
        //*SET FECHA MAXIMA//
        /*Calendar min = Calendar.getInstance();  
        min.set(Calendar.YEAR,2012);  
        min.set(Calendar.MONTH,12);  
        min.set(Calendar.DATE,1);  

        */
        
        


        //Read more: http://javafree.uol.com.br/topic-883496-JDateChooser-Limitando-e-Validando-Datas.html#ixzz2BUjSpMNS
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtCedula = new javax.swing.JTextField();
        txtNombreCliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lblFechaActual = new javax.swing.JLabel();
        btnBuscarCliente = new javax.swing.JButton();
        chkDeudasCero = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        txtIdCuentaCobrar = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        btnVerPagos = new javax.swing.JButton();
        btnVerFactura = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtTipoDocumento = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        txtTotalDeuda = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txtValor = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtReferencia = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtFechaAcordada = new javax.swing.JTextField();
        txtInteresesPlata = new javax.swing.JTextField();
        txtValorAbono = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtDias = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtInteres = new javax.swing.JTextField();
        btnGuardarPago = new javax.swing.JButton();
        chkVerificado = new javax.swing.JCheckBox();

        setClosable(true);
        setIconifiable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(stinventario.STInventarioApp.class).getContext().getResourceMap(frmPagoNuevoAdd.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtCedula.setText(resourceMap.getString("txtCedula.text")); // NOI18N
        txtCedula.setName("txtCedula"); // NOI18N
        txtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedulaKeyTyped(evt);
            }
        });

        txtNombreCliente.setEditable(false);
        txtNombreCliente.setText(resourceMap.getString("txtNombreCliente.text")); // NOI18N
        txtNombreCliente.setName("txtNombreCliente"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        lblFechaActual.setText(resourceMap.getString("lblFechaActual.text")); // NOI18N
        lblFechaActual.setName("lblFechaActual"); // NOI18N

        btnBuscarCliente.setText(resourceMap.getString("btnBuscarCliente.text")); // NOI18N
        btnBuscarCliente.setName("btnBuscarCliente"); // NOI18N
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        chkDeudasCero.setText(resourceMap.getString("chkDeudasCero.text")); // NOI18N
        chkDeudasCero.setName("chkDeudasCero"); // NOI18N
        chkDeudasCero.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkDeudasCeroItemStateChanged(evt);
            }
        });

        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N

        txtDireccion.setEditable(false);
        txtDireccion.setName("txtDireccion"); // NOI18N

        jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
        jLabel13.setName("jLabel13"); // NOI18N

        txtTelefono.setEditable(false);
        txtTelefono.setName("txtTelefono"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(txtDireccion))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCedula)
                                .addGap(18, 18, 18)
                                .addComponent(btnBuscarCliente))
                            .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(lblFechaActual, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(chkDeudasCero)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(73, 73, 73))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(lblFechaActual)
                    .addComponent(jLabel3)
                    .addComponent(btnBuscarCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkDeudasCero))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel2.border.title"))); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tblData.setModel(dtmData);
        tblData.setName("tblData"); // NOI18N
        tblData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblData);

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        txtIdCuentaCobrar.setEditable(false);
        txtIdCuentaCobrar.setText(resourceMap.getString("txtIdCuentaCobrar.text")); // NOI18N
        txtIdCuentaCobrar.setName("txtIdCuentaCobrar"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        txtDescripcion.setColumns(20);
        txtDescripcion.setEditable(false);
        txtDescripcion.setRows(5);
        txtDescripcion.setName("txtDescripcion"); // NOI18N
        jScrollPane2.setViewportView(txtDescripcion);

        btnVerPagos.setIcon(resourceMap.getIcon("btnVerPagos.icon")); // NOI18N
        btnVerPagos.setText(resourceMap.getString("btnVerPagos.text")); // NOI18N
        btnVerPagos.setToolTipText(resourceMap.getString("btnVerPagos.toolTipText")); // NOI18N
        btnVerPagos.setActionCommand(resourceMap.getString("btnVerPagos.actionCommand")); // NOI18N
        btnVerPagos.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnVerPagos.setName("btnVerPagos"); // NOI18N
        btnVerPagos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerPagosActionPerformed(evt);
            }
        });

        btnVerFactura.setIcon(resourceMap.getIcon("btnVerFactura.icon")); // NOI18N
        btnVerFactura.setText(resourceMap.getString("btnVerFactura.text")); // NOI18N
        btnVerFactura.setToolTipText(resourceMap.getString("btnVerFactura.toolTipText")); // NOI18N
        btnVerFactura.setActionCommand(resourceMap.getString("btnVerFactura.actionCommand")); // NOI18N
        btnVerFactura.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnVerFactura.setName("btnVerFactura"); // NOI18N
        btnVerFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerFacturaActionPerformed(evt);
            }
        });

        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N

        txtTipoDocumento.setEditable(false);
        txtTipoDocumento.setText(resourceMap.getString("txtTipoDocumento.text")); // NOI18N
        txtTipoDocumento.setName("txtTipoDocumento"); // NOI18N

        jButton2.setIcon(resourceMap.getIcon("jButton2.icon")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        txtTotalDeuda.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalDeuda.setText(resourceMap.getString("txtTotalDeuda.text")); // NOI18N
        txtTotalDeuda.setName("txtTotalDeuda"); // NOI18N

        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N

        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotalDeuda, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel6))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtIdCuentaCobrar, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7))
                            .addComponent(txtTipoDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                            .addComponent(btnVerFactura, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnVerPagos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalDeuda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtIdCuentaCobrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7))
                            .addComponent(btnVerFactura))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(txtTipoDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnVerPagos)
                                .addComponent(jButton3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel3.border.title"))); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N

        txtValor.setEditable(false);
        txtValor.setBackground(resourceMap.getColor("txtValor.background")); // NOI18N
        txtValor.setFont(resourceMap.getFont("txtValor.font")); // NOI18N
        txtValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtValor.setText(resourceMap.getString("txtValor.text")); // NOI18N
        txtValor.setName("txtValor"); // NOI18N
        txtValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValorKeyTyped(evt);
            }
        });

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        txtReferencia.setEditable(false);
        txtReferencia.setColumns(20);
        txtReferencia.setRows(5);
        txtReferencia.setName("txtReferencia"); // NOI18N
        txtReferencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtReferenciaKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(txtReferencia);

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel14.setText(resourceMap.getString("jLabel14.text")); // NOI18N
        jLabel14.setName("jLabel14"); // NOI18N

        jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15"); // NOI18N

        txtFechaAcordada.setEditable(false);
        txtFechaAcordada.setText(resourceMap.getString("txtFechaAcordada.text")); // NOI18N
        txtFechaAcordada.setName("txtFechaAcordada"); // NOI18N

        txtInteresesPlata.setEditable(false);
        txtInteresesPlata.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtInteresesPlata.setText(resourceMap.getString("txtInteresesPlata.text")); // NOI18N
        txtInteresesPlata.setName("txtInteresesPlata"); // NOI18N

        txtValorAbono.setEditable(false);
        txtValorAbono.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtValorAbono.setText(resourceMap.getString("txtValorAbono.text")); // NOI18N
        txtValorAbono.setName("txtValorAbono"); // NOI18N
        txtValorAbono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorAbonoActionPerformed(evt);
            }
        });

        jLabel16.setText(resourceMap.getString("jLabel16.text")); // NOI18N
        jLabel16.setName("jLabel16"); // NOI18N

        txtDias.setEditable(false);
        txtDias.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDias.setText(resourceMap.getString("txtDias.text")); // NOI18N
        txtDias.setName("txtDias"); // NOI18N
        txtDias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiasActionPerformed(evt);
            }
        });

        jLabel17.setText(resourceMap.getString("jLabel17.text")); // NOI18N
        jLabel17.setName("jLabel17"); // NOI18N

        txtInteres.setText(resourceMap.getString("txtInteres.text")); // NOI18N
        txtInteres.setName("txtInteres"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtValor)
                    .addComponent(txtFechaAcordada, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtValorAbono, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                    .addComponent(txtInteresesPlata))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDias, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(txtInteres))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel4)
                            .addComponent(txtFechaAcordada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(txtDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtValorAbono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel17)
                            .addComponent(txtInteres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtInteresesPlata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnGuardarPago.setIcon(resourceMap.getIcon("btnGuardarPago.icon")); // NOI18N
        btnGuardarPago.setText(resourceMap.getString("btnGuardarPago.text")); // NOI18N
        btnGuardarPago.setName("btnGuardarPago"); // NOI18N
        btnGuardarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarPagoActionPerformed(evt);
            }
        });

        chkVerificado.setText(resourceMap.getString("chkVerificado.text")); // NOI18N
        chkVerificado.setName("chkVerificado"); // NOI18N
        chkVerificado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkVerificadoItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chkVerificado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGuardarPago))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardarPago)
                    .addComponent(chkVerificado))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public class MiModelo extends DefaultTableModel
    {
            @Override
       public boolean isCellEditable (int row, int column)
       {
           // AquÃ­ devolvemos true o false segÃºn queramos que una celda
           // identificada por fila,columna (row,column), sea o no editable
          /* if (column == 3)
              return true;*/
           
           return false;
       }
    } 

    public class colorFilaTable extends DefaultTableCellRenderer { 
        @Override 
        public Component getTableCellRendererComponent (JTable table, Object value, boolean selected, boolean focused, int row, int column ) 
        { 
            setEnabled(table == null || table.isEnabled());        

            if(String.valueOf(table.getValueAt(row,7)).equals("NOTA DE ENTREGA")) 
                setBackground(Color.green); 
            else if(String.valueOf(table.getValueAt(row,7)).equals("FACTURA")) 
                setBackground(Color.PINK); 
            else setBackground(null); 

            super.getTableCellRendererComponent(table, value, selected, focused, row, column); 
            return this; 
        } 
    }  

    
private void tblDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataMouseClicked
     int fila = tblData.rowAtPoint(evt.getPoint());
     //int columna = tblData.columnAtPoint(evt.getPoint());
     
     txtIdCuentaCobrar.setText(""+tblData.getValueAt(fila,5));
     txtDescripcion.setText(""+tblData.getValueAt(fila,2));
     saldoActual = Double.parseDouble(""+tblData.getValueAt(fila,4));
     txtTipoDocumento.setText(""+tblData.getValueAt(fila,7));
     
     int idCabeMovi = Integer.parseInt(tblData.getValueAt(fila,6).toString());
     /*OBTENER EL PRIMER PAGO PENDIENTE*/
     ArrayList<clsAbono> dataPagoPendiente = objAbono.obtenerDataPagoPendiente(idCabeMovi);
    
     String fecha_acordada = "";
     //String fecha_acordada = dataPagoPendiente.get(0).getFechaAbono().substring(0, 10);
     double valorAbono = 0.00;
     if(dataPagoPendiente.isEmpty())
     {        
         //JOptionPane.showMessageDialog(this, "Vacio!!!", "AtenciÃ³n!", JOptionPane.ERROR_MESSAGE);
         Date fechaActual = new Date();
         fecha_acordada = ""+df.format(fechaActual);
         txtFechaAcordada.setText(fecha_acordada); 
         valorAbono = 0.00;   
         
         int i = tblData.getSelectedRow();
         if(tblData.getValueAt(i,7).equals("NOTA DE ENTREGA"))
         {   
            
            ArrayList <clsCabecera> dataCabecera;
            dataCabecera = objCabecera.consultarDataCabeceraCredito(idCabeMovi);
            valorAbono = dataCabecera.get(0).getValor();            
        }
        else if(tblData.getValueAt(i,7).equals("FACTURA"))
        {
             ArrayList <clsCabecera> dataCabecera = objCabecera.consultarDataCabeceraCreditoFactura(idCabeMovi);
             valorAbono = dataCabecera.get(0).getValor();
        }
     }
     else
     {
          //JOptionPane.showMessageDialog(this, "Con datos!!!", "AtenciÃ³n!", JOptionPane.ERROR_MESSAGE);
          fecha_acordada = dataPagoPendiente.get(0).getFechaAbono().substring(0, 10);
          txtFechaAcordada.setText(fecha_acordada);
          valorAbono = dataPagoPendiente.get(0).getValorAbono();          
     }
     
     double semanas_atraso = obtenerDias(fecha_acordada)/7;
     txtDias.setText("" + semanas_atraso);

     double interes_semanal = 0;
     if(!tblData.getValueAt(fila, 7).equals("FACTURA"))
     {
         interes_semanal = ((Double.parseDouble(tblData.getValueAt(fila, 8).toString())/100)/48)*100;
     }

     double interesesPorcentaje = objUtils.redondear(interes_semanal*semanas_atraso);
     txtInteres.setText("" + interesesPorcentaje);      
     
     double interesesPorCobrar = interesesPorcentaje * valorAbono / 100;
     txtInteresesPlata.setText("" + objUtils.redondear(interesesPorCobrar));
    
     txtValorAbono.setText("" + objUtils.redondear(valorAbono));
     
     txtValor.setEditable(true);
     txtValor.setText("" + objUtils.redondear(valorAbono + interesesPorCobrar));//BM-0435
     
     
     txtReferencia.setEditable(true);
     txtValor.requestFocus();
}//GEN-LAST:event_tblDataMouseClicked
     
    public Date DeStringADate(String fecha){
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        String strFecha = fecha;
        Date fechaDate = null;
        try {
            fechaDate = formato.parse(strFecha);
                        //System.out.println(fechaDate.toString());
            return fechaDate;
        } catch (Exception ex) {
            ex.printStackTrace();
            return fechaDate;
        }
    }

    public int obtenerDias(String fecha_pago)
    {
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        Date fechaActual = new Date();
        int valor = 0;
        String fecha_actual = "" + df.format(fechaActual);
        if (fechaActual.before(DeStringADate(fecha_pago)) ) 
        {
            
        }
        else if(fecha_actual.equals(fecha_pago)) 
        {
        
        }
        else
        {
           
            Calendar c = Calendar.getInstance();

            //fecha inicio
            Calendar fechaInicio = new GregorianCalendar();
            System.out.println(fecha_pago);
            int anio = Integer.parseInt(fecha_pago.substring(0, 4));
            System.out.println(anio);        
            int mes = Integer.parseInt(fecha_pago.substring(5, 7));
            System.out.println(mes);
            int dia = Integer.parseInt(fecha_pago.substring(8, 10));
            System.out.println(dia);
            fechaInicio.set(anio, mes, dia);

            //fecha fin

            Calendar fechaFin = new GregorianCalendar();
            int anio2 = Integer.parseInt(fecha_actual.substring(0, 4));
            System.out.println(anio2);
            int mes2 = Integer.parseInt(fecha_actual.substring(5, 7));
            System.out.println(mes2);
            int dia2 = Integer.parseInt(fecha_actual.substring(8, 10));
            System.out.println(dia2);
            fechaFin.set(anio2, mes2, dia2);

            //restamos las fechas como se puede ver son de tipo Calendar,

            //debemos obtener el valor long con getTime.getTime.

            c.setTimeInMillis(fechaFin.getTime().getTime() - fechaInicio.getTime().getTime());

            //la resta provoca que guardamos este valor en c,

            //los milisegundos corresponde al tiempo en dias

            //asi sabemos cuantos dias
            System.out.println(c.get(Calendar.DAY_OF_YEAR));
            valor = c.get(Calendar.DAY_OF_YEAR);
        }
         return  valor;

        //System.out.println("N. dias" + c.get(Calendar.DAY_OF_YEAR));
    }
    
private void btnGuardarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarPagoActionPerformed
    String idCtaCobrar = txtIdCuentaCobrar.getText();
    String factRef = txtReferencia.getText();
    
    if(txtNombreCliente.getText().equals("")||idCtaCobrar.equals("")||txtValor.getText().equals("")||factRef.equals(""))
    {
       JOptionPane.showMessageDialog(this, "Ingrese correctamente la informaciÃ³n", "AtenciÃ³n!", JOptionPane.ERROR_MESSAGE);
    }
    else
    {
        Double valor = Double.parseDouble(txtValor.getText());
        Double diferencia;
        diferencia = saldoActual - valor;
        if(diferencia<0)
        {
            JOptionPane.showMessageDialog(this, "Valor del pago excede saldo de la deuda", "AtenciÃ³n!", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            DateFormat df2 = new SimpleDateFormat("yyyy-MM-dd");
            if(txtTipoDocumento.getText().equals("NOTA DE ENTREGA"))
            {    
                //INSERTAR PAGO
                objPago.insertarRegistroNuevo(idCtaCobrar, main.idUser, factRef, ""+valor);
                //ACTUALIZAR SALDO
                //objCtasCobrar.actualizarSaldoHisto(idCtaCobrar, objUtils.redondear(valor), fechaPago);
                //OBTENER SALDO SI SALDO ES  CERO CANCELO DEUDA
                //String saldo = objCtasCobrar.consultarSaldoCta(idCtaCobrar);
                //if(saldo.equals("0")||saldo.equals("0.00"))
                //{
                    //REGISTRAR QUE FECHA QUEDO CANCELADO O EN CERO
                    //objCtasCobrar.registrarCancelacionHistorico(idCtaCobrar, fechaPago);
                //}            
                JOptionPane.showMessageDialog(this, "Pago ingresado con Ã©xito", "AtenciÃ³n!", JOptionPane.INFORMATION_MESSAGE);
                //AUDITORIA
                objAuditoria.insertarAuditoria("frmPagoHistoricoAdd", "INGRESO DEL PAGO POR LA  CUENTA: " + txtIdCuentaCobrar.getText().toString() + "-" + txtDescripcion.getText().toString(), "3");
            }
            else if(txtTipoDocumento.getText().equals("FACTURA"))
            {
                //INSERTAR PAGO
                objPago.insertarPagoFacturasNuevo(idCtaCobrar, main.idUser, factRef, ""+valor);
                //ACTUALIZAR SALDO
                //objCtasCobrar.actualizarSaldoFacturas(idCtaCobrar, objUtils.redondear(valor), fechaPago);
                 //OBTENER SALDO SI SALDO ES  CERO CANCELO DEUDA
                //String saldo = objCtasCobrar.consultarSaldoCtaFactura(idCtaCobrar);
                //if(saldo.equals("0")||saldo.equals("0.00"))
                //{
                    //REGISTRAR QUE FECHA QUEDO CANCELADO O EN CERO
                    //objCtasCobrar.registrarCancelacionDeudaFactura(idCtaCobrar, fechaPago);
                //}            
                JOptionPane.showMessageDialog(this, "Pago ingresado con Ã©xito", "AtenciÃ³n!", JOptionPane.INFORMATION_MESSAGE);
                //AUDITORIA
                objAuditoria.insertarAuditoria("frmPagoHistoricoAdd", "INGRESO DEL PAGO POR LA  CUENTA: " + txtIdCuentaCobrar.getText().toString() + "-" + txtDescripcion.getText().toString(), "3");
            }
            
            //dispose();
            txtValor.setText("");
            txtReferencia.setText("");
            txtIdCuentaCobrar.setText("");
            txtDescripcion.setText("");
            txtTipoDocumento.setText("");
            objUtils.limpiarJTable(dtmData);
            llenarTablaDeudas();
           
            
        }
    }
}//GEN-LAST:event_btnGuardarPagoActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    objUtils.vaciarTabla(dtmData);
    frmListClientes ventana = new frmListClientes(null, true, "14");
    //new inventariopdf.JDEscoger(this, true);
    ventana.setLocationRelativeTo(null);
    ventana.setVisible(true);
}//GEN-LAST:event_jButton1ActionPerformed

private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
    txtFechaAcordada.setText("");
    txtValorAbono.setText("");
    txtInteresesPlata.setText("");
    txtValor.setText("");
    txtDias.setText("");
    txtInteres.setText("");
    txtReferencia.setText("");
    txtValor.setEditable(false);
    
    llenarDataCliente();
}//GEN-LAST:event_btnBuscarClienteActionPerformed

public void llenarDataCliente()
{
    ArrayList<clsCliente> dataCliente = objCliente.consultarDataCliente(txtCedula.getText().toString());
    if(dataCliente.isEmpty())
    {
        JOptionPane.showMessageDialog(this, "CÃ©dula no existe!!!", "AtenciÃ³n!", JOptionPane.ERROR_MESSAGE);
    }
    else
    {
        //objUtils.limpiarJTable(dtmData);
        txtNombreCliente.setText(dataCliente.get(0).getNameCompleto());
        txtDireccion.setText(dataCliente.get(0).getDireccion());
        txtTelefono.setText(dataCliente.get(0).getTlfCelular() + " - " + dataCliente.get(0).getTlfConvencional());
        if(dataCliente.get(0).getVerificadoDeudas().equals("N"))
        {
            getContentPane().setBackground(new java.awt.Color(255,0,0));
            jPanel1.setBackground(new java.awt.Color(255,0,0));
            jPanel2.setBackground(new java.awt.Color(255,0,0));
            jPanel3.setBackground(new java.awt.Color(255,0,0));
        }
        else
        {
            getContentPane().setBackground(new java.awt.Color(240,240,240));
            jPanel1.setBackground(new java.awt.Color(240,240,240));
            jPanel2.setBackground(new java.awt.Color(240,240,240));
            jPanel3.setBackground(new java.awt.Color(240,240,240));
            chkVerificado.setSelected(true);
        }
        //BUSCAR LAS CUENTAS POR COBRAR
        codigoCliente = ""+dataCliente.get(0).getCodigo();
        llenarTablaDeudas();        
    }
}

    void llenarTablaDeudas()
    {
        objUtils.limpiarJTable(dtmData);
        ArrayList<clsCtasCobrar> dataCtasCobrar;
        ArrayList<clsCtasCobrar> dataCtasCobrarFact;
        Double totalDeudas = 0.00;
        if(chkDeudasCero.isSelected())
        {
            dataCtasCobrar = objCtasCobrar.consultaCtasCobrarNotasEntrega(codigoCliente);  
            dataCtasCobrarFact = objCtasCobrar.consultaCtasCobrarFacturas(codigoCliente); 
        }
        else
        {
            dataCtasCobrar = objCtasCobrar.consultaCtasCobrarNotasEntregaConSaldo(codigoCliente); 
            dataCtasCobrarFact = objCtasCobrar.consultaCtasCobrarFacturasConSaldo(codigoCliente); 
        }
        /*ArrayList<clsCtasCobrar> dataCtasCobrar = objCtasCobrar.consultaCtasCobrarNotasEntrega(codigoCliente); 
        ArrayList<clsCtasCobrar> dataCtasCobrarFact = objCtasCobrar.consultaCtasCobrarFacturas(codigoCliente); */
        Double valor;
        Double valorActual;
        int maxData = dataCtasCobrar.size();
        int maxDataFact = dataCtasCobrarFact.size();
        if((maxData==0)&&(maxDataFact==0))
        {
            JOptionPane.showMessageDialog(this, "No tiene cuentas por cobrar", "AtenciÃ³n!", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            int i = 0;
            for(i=0;i<maxData;i++)
            {
                 valor = Double.parseDouble(dataCtasCobrar.get(i).getValor());
                 valorActual = Double.parseDouble(dataCtasCobrar.get(i).getValorActual());

                 Object[] nuevaFila = {i+1, 
                                        dataCtasCobrar.get(i).getFactReferencia(), 
                                        dataCtasCobrar.get(i).getDescripcion(), 
                                        objUtils.redondear(valor), 
                                        objUtils.redondear(valorActual),
                                        dataCtasCobrar.get(i).getIdCtaCobrar(),
                                        dataCtasCobrar.get(i).getIdCabeceraMovi(),
                                        "NOTA DE ENTREGA",
                                        dataCtasCobrar.get(i).getPorcentajeInteres()};
                 dtmData.addRow(nuevaFila);
                 totalDeudas = totalDeudas + valorActual;
            }   
            
            for(int j=0;j<maxDataFact;j++)
            {
                 valor = Double.parseDouble(dataCtasCobrarFact.get(j).getValor());
                 valorActual = Double.parseDouble(dataCtasCobrarFact.get(j).getValorActual());

                 Object[] nuevaFila = {i+1, 
                                        dataCtasCobrarFact.get(j).getFactReferencia(), 
                                        dataCtasCobrarFact.get(j).getDescripcion(), 
                                        objUtils.redondear(valor), 
                                        objUtils.redondear(valorActual),
                                        dataCtasCobrarFact.get(j).getIdCtaCobrar(),
                                        dataCtasCobrarFact.get(j).getIdCabeceraMovi(),
                                        "FACTURA"};
                 dtmData.addRow(nuevaFila); 
                 totalDeudas = totalDeudas + valorActual;
                 i++;
            }   
        }
        this.txtTotalDeuda.setText("" + objUtils.redondear(totalDeudas));  
    }

private void btnVerFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerFacturaActionPerformed
    int i = tblData.getSelectedRow();
    if(i<0)
    {
        JOptionPane.showMessageDialog(this, "No ha seleccionado ninguna factura", "AtenciÃ³n", JOptionPane.ERROR_MESSAGE);
    }
    else
    {
        if(tblData.getValueAt(i,7).equals("NOTA DE ENTREGA"))
        {   
            int idCabecera = Integer.parseInt(""+tblData.getValueAt(i,6));
            System.out.println(idCabecera);
            frmFactHistoShow ventana = new frmFactHistoShow(null, true, idCabecera);
            ventana.setLocationRelativeTo(null);
            ventana.setVisible(true);            
        }
        else if(tblData.getValueAt(i,7).equals("FACTURA"))
        {
            String idCabecera = ""+tblData.getValueAt(i,6);
            System.out.println(idCabecera);
            frmFactDeudaShow ventana = new frmFactDeudaShow(null, true, idCabecera);
            ventana.setLocationRelativeTo(null);
            ventana.setVisible(true);
        }
    }
}//GEN-LAST:event_btnVerFacturaActionPerformed

private void btnVerPagosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerPagosActionPerformed
    int i = tblData.getSelectedRow();
    if(i<0)
    {
        JOptionPane.showMessageDialog(this, "No ha seleccionado ninguna factura", "AtenciÃ³n", JOptionPane.ERROR_MESSAGE);
    }
    else
    {
        if(tblData.getValueAt(i,7).equals("NOTA DE ENTREGA"))
        {   
            int idCabecera = Integer.parseInt(""+tblData.getValueAt(i,6));
            objReporte.ejecutarReporteParametroInt(idCabecera, "rptPagosFactura");
        }
        else if(tblData.getValueAt(i,7).equals("FACTURA"))
        {
           int idCabecera = Integer.parseInt(""+tblData.getValueAt(i,6));
           objReporte.ejecutarReporteParametroInt(idCabecera, "rptPagosFacturaCredito");
        }        
    }
}//GEN-LAST:event_btnVerPagosActionPerformed

private void txtCedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaKeyTyped
    if(evt.getKeyChar() == KeyEvent.VK_ENTER){
            //KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();
            //manager.focusNextComponent(); 
        this.llenarDataCliente();
    }
}//GEN-LAST:event_txtCedulaKeyTyped

private void txtValorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorKeyTyped
    if(evt.getKeyChar() == KeyEvent.VK_ENTER){
            KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();
            manager.focusNextComponent();  
    }
}//GEN-LAST:event_txtValorKeyTyped

private void txtReferenciaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtReferenciaKeyTyped
    if(evt.getKeyChar() == KeyEvent.VK_ENTER){
            KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();
            manager.focusNextComponent();  
    }
}//GEN-LAST:event_txtReferenciaKeyTyped

private void chkVerificadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkVerificadoItemStateChanged
      
        if(chkVerificado.isSelected())
        {
            objCliente.actualizarVerificado(codigoCliente, "S");
            this.llenarDataCliente();            
        }
        else
        {
            objCliente.actualizarVerificado(codigoCliente, "N");
            this.llenarDataCliente();           
        }
}//GEN-LAST:event_chkVerificadoItemStateChanged

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    int i = tblData.getSelectedRow();
    boolean permitido = false;
    if(i<0)
    {
        JOptionPane.showMessageDialog(this, "No ha seleccionado ninguna factura", "AtenciÃ³n", JOptionPane.ERROR_MESSAGE);
    }
    else
    {
        if(tblData.getValueAt(i,7).equals("NOTA DE ENTREGA"))
        {   
            int idCabecera = Integer.parseInt(""+tblData.getValueAt(i,6));
            //objReporte.ejecutarReporteParametroInt(idCabecera, "rptPagosFactura");
            //String idCabecera = ""+tblData.getValueAt(i,6);
            //System.out.println(idCabecera);
            permitido = objPermisos.comprobarPermisoFormulario(main.idUser, "frmPagosEliminar");
            if(permitido)
            {  
                //Le envio 1, si es nota de  entrega 
                frmPagosEliminar ventana = new frmPagosEliminar(null, true, idCabecera, 1);
                ventana.setLocationRelativeTo(null);
                ventana.setVisible(true);
            }
            else
            {
                JOptionPane.showMessageDialog(this, objUtils.msgSinPermisosFormulario, objUtils.msgTitleSinPermisos, JOptionPane.WARNING_MESSAGE);            
            }
            
        }
        else if(tblData.getValueAt(i,7).equals("FACTURA"))
        {
            int idCabecera = Integer.parseInt(""+tblData.getValueAt(i,6));
            //objReporte.ejecutarReporteParametroInt(idCabecera, "rptPagosFacturaCredito");
            permitido = objPermisos.comprobarPermisoFormulario(main.idUser, "frmPagosEliminar");
            if(permitido)
            {  
                //Le envio 2, si es factura
                frmPagosEliminar ventana = new frmPagosEliminar(null, true, idCabecera, 2);
                ventana.setLocationRelativeTo(null);
                ventana.setVisible(true);
            }
            else
            {
                JOptionPane.showMessageDialog(this, objUtils.msgSinPermisosFormulario, objUtils.msgTitleSinPermisos, JOptionPane.WARNING_MESSAGE);            
            }
        } 
        objUtils.vaciarTabla(dtmData);
        txtIdCuentaCobrar.setText("");
        txtTipoDocumento.setText("");
        txtDescripcion.setText("");
    }
}//GEN-LAST:event_jButton2ActionPerformed

private void chkDeudasCeroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkDeudasCeroItemStateChanged
    llenarDataCliente();          
    
}//GEN-LAST:event_chkDeudasCeroItemStateChanged

    private void txtValorAbonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorAbonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorAbonoActionPerformed

    private void txtDiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiasActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnGuardarPago;
    private javax.swing.JButton btnVerFactura;
    private javax.swing.JButton btnVerPagos;
    private javax.swing.JCheckBox chkDeudasCero;
    private javax.swing.JCheckBox chkVerificado;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblFechaActual;
    private javax.swing.JTable tblData;
    public static javax.swing.JTextField txtCedula;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtDias;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtFechaAcordada;
    private javax.swing.JTextField txtIdCuentaCobrar;
    private javax.swing.JTextField txtInteres;
    private javax.swing.JTextField txtInteresesPlata;
    public static javax.swing.JTextField txtNombreCliente;
    private javax.swing.JTextArea txtReferencia;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtTipoDocumento;
    private javax.swing.JTextField txtTotalDeuda;
    private javax.swing.JTextField txtValor;
    private javax.swing.JTextField txtValorAbono;
    // End of variables declaration//GEN-END:variables
}
