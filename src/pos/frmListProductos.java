/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmListProductos.java
 *
 * Created on 28/10/2011, 02:21:08 PM
 */
package pos;

import clases.clsComboBox;
import clases.clsPrecio;
import clases.clsProducto;
import clases.clsUtils;
import java.util.ArrayList;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import producto.frmCompras;
import producto.frmComprasModificar;
import pos.frmInventario;
import producto.frmGuiaRemision;
import producto.frmKardex;
import producto.frmProductosDel;
import producto.frmProductosMod;

/**
 *
 * @author CKaiser
 */
public class frmListProductos extends javax.swing.JDialog {
    clsUtils objUtils = new clsUtils();
    clsProducto objProducto = new clsProducto();
    clsPrecio objPrecio = new clsPrecio();
    String p_tipo;
    int codigoClienteX = 0;
    MiModelo dtmData = new MiModelo();
    /** Creates new form frmListProductos */
    public frmListProductos(java.awt.Dialog parent, boolean modal, String tipo, int codigoCliente) {
        super(parent, modal);
        initComponents();
        
        codigoClienteX = codigoCliente;
        p_tipo = tipo;
        dtmData.addColumn("Nº");
        dtmData.addColumn("Codigo");
        dtmData.addColumn("Nombre");
        dtmData.addColumn("id_producto"); 
        dtmData.addColumn("stock"); 
        dtmData.addColumn("descuento");
        dtmData.addColumn("Control Existencia");
        dtmData.addColumn("PRECIO");
        dtmData.addColumn("costo");
        
        TableColumn columna = tblData.getColumn("Nº");
        columna.setMinWidth(30);
        columna.setMaxWidth(30);
        TableColumn columna2 = tblData.getColumn("Codigo");
        columna2.setMaxWidth(120);
        
        //ALINEAR COLUMNA
        DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
        tcr.setHorizontalAlignment(SwingConstants.RIGHT);
        tblData.getColumnModel().getColumn(7).setCellRenderer(tcr); 
        
        objUtils.setOcultarColumnasJTable(this.tblData, new int[]{3});
    }
    
    public class MiModelo extends DefaultTableModel
    {
            @Override
       public boolean isCellEditable (int row, int column)
       {
           // Aquí devolvemos true o false según queramos que una celda
           // identificada por fila,columna (row,column), sea o no editable
          /* if (column == 3)
              return true;*/
           
           return false;
       }
    } 
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombreProducto = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(stinventario.STInventarioApp.class).getContext().getResourceMap(frmListProductos.class);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        txtNombreProducto.setText(resourceMap.getString("txtNombreProducto.text")); // NOI18N
        txtNombreProducto.setName("txtNombreProducto"); // NOI18N
        txtNombreProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNombreProductoFocusGained(evt);
            }
        });
        txtNombreProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreProductoKeyReleased(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tblData.setModel(dtmData);
        tblData.setName("tblData"); // NOI18N
        tblData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblData);

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        txtPrecio.setText(resourceMap.getString("txtPrecio.text")); // NOI18N
        txtPrecio.setName("txtPrecio"); // NOI18N
        txtPrecio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPrecioFocusGained(evt);
            }
        });
        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPrecioKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNombreProducto, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataMouseClicked
        int fila = tblData.rowAtPoint(evt.getPoint());
        int columna = tblData.columnAtPoint(evt.getPoint());   
        String costo = "";
        if ((fila > -1) && (columna >-1)) 
        {
            String codigo = "" + tblData.getValueAt(fila,3);
            String codProducto = "" + tblData.getValueAt(fila,1);
            String descripcion = "" + tblData.getValueAt(fila,2);  
            String stock = "" + tblData.getValueAt(fila,4);  
            String descuento = "" + tblData.getValueAt(fila,5); 
            String control_existencia = "" + tblData.getValueAt(fila,6); 
            String precio = "" + tblData.getValueAt(fila,7); 
            costo = "" + tblData.getValueAt(fila,8); 
           
            if(p_tipo.equals("1"))
            {
                frmFacturar.codigoProducto = Integer.parseInt(codigo);
                frmFacturar.txtCodigoProducto.setText(codProducto);
                frmFacturar.txtNombreProducto.setText(descripcion);
                frmFacturar.txtStock.setText(stock);
                frmFacturar.txtDescuentoUnidad.setText(descuento);
                frmFacturar.controlExistencia = control_existencia;
                frmFacturar.txtCosto.setText(costo);
            }
            else if(p_tipo.equals("2"))
            {
                frmFactHisto.codigoProducto = Integer.parseInt(codigo);
                frmFactHisto.txtCodigoProducto.setText(codProducto);
                frmFactHisto.txtNombreProducto.setText(descripcion);
            }
            else if(p_tipo.equals("3"))
            {
                frmKardex.codigoProducto = Integer.parseInt(codigo);
                frmKardex.txtCodigoProducto.setText(codProducto);
                frmKardex.txtDescripcion.setText(descripcion);
            }            
            else if(p_tipo.equals("4"))
            {
                frmCompras.codigoProducto = Integer.parseInt(codigo);
                frmCompras.txtCodigoProducto.setText(codProducto);
                frmCompras.txtNombreProducto.setText(descripcion);
                frmCompras.txtPrecioVenta.setText(precio);
                frmCompras.txtPrecioVirgen.setEditable(true);
                frmCompras.txtCantidad.setEditable(true);
                frmCompras.txtDescuentoUnidad.setEditable(true);
                frmCompras.txtCantidad.requestFocus();
                
            }
            else if(p_tipo.equals("5"))
            {
                //frmCompras.codigoProducto = Integer.parseInt(codigo);
                frmProductosMod.txtCodigo.setText(codProducto);
                //frmCompras.txtNombreProducto.setText(descripcion);
            }
            else if(p_tipo.equals("6"))
            {
                //frmCompras.codigoProducto = Integer.parseInt(codigo);
                frmProductosDel.txtCodigo.setText(codProducto);
                //frmCompras.txtNombreProducto.setText(descripcion);
            }
            else if(p_tipo.equals("7"))
            {
                //frmCompras.codigoProducto = Integer.parseInt(codigo);
                frmCotizador.txtCodigoProducto.setText(codProducto);
                //frmCompras.txtNombreProducto.setText(descripcion);
            }
            else if(p_tipo.equals("8"))
            {
                frmDevolucionVenta.codigoProducto = Integer.parseInt(codigo);
                frmDevolucionVenta.txtCodigoProducto.setText(codProducto);
                frmDevolucionVenta.txtNombreProducto.setText(descripcion);
                frmDevolucionVenta.txtStock.setText(stock);
                frmDevolucionVenta.txtDescuentoUnidad.setText(descuento);
                frmDevolucionVenta.controlExistencia = control_existencia;
                frmDevolucionVenta.txtCosto.setText(costo);
            }
            else if(p_tipo.equals("9"))
            {
                frmNotasEntrega1.codigoProducto = Integer.parseInt(codigo);
                frmNotasEntrega1.txtCodigoProducto.setText(codProducto);
                frmNotasEntrega1.txtNombreProducto.setText(descripcion);
                frmNotasEntrega1.txtStock.setText(stock);
                frmNotasEntrega1.txtDescuentoUnidad.setText(descuento);
                frmNotasEntrega1.controlExistencia = control_existencia;
                frmNotasEntrega1.txtCosto.setText(costo);
            }
            else if(p_tipo.equals("10"))
            {
                frmComprasModificar.codigoProducto = Integer.parseInt(codigo);
                frmComprasModificar.txtCodigoProducto.setText(codProducto);
                frmComprasModificar.txtNombreProducto.setText(descripcion);
                frmComprasModificar.txtPrecioVenta.setText(precio);
                frmComprasModificar.txtCantidad.requestFocus(); 
                frmComprasModificar.txtPrecioVirgen.setEditable(true);
                frmComprasModificar.txtCantidad.setEditable(true);
                frmComprasModificar.txtDescuentoUnidad.setEditable(true);                
            }
            else if(p_tipo.equals("11"))
            {
                frmNotasEntregaModificar.codigoProducto = Integer.parseInt(codigo);
                frmNotasEntregaModificar.txtCodigoProducto.setText(codProducto);
                frmNotasEntregaModificar.txtNombreProducto.setText(descripcion);
                frmNotasEntregaModificar.txtStock.setText(stock);
                frmNotasEntregaModificar.txtDescuentoUnidad.setText(descuento);
                frmNotasEntregaModificar.controlExistencia = control_existencia;
                frmNotasEntregaModificar.txtCosto.setText(costo);
            }
            else if(p_tipo.equals("12"))
            {
                frmInventario.codigoProducto = Integer.parseInt(codigo);
                frmInventario.txtCodigoProducto.setText(codProducto);
                frmInventario.txtNombreProducto.setText(descripcion);
                frmInventario.txtStockSistema.setText(stock);
                //frmInventario.txtDescuentoUnidad.setText(descuento);
                frmInventario.controlExistencia = control_existencia;
                frmInventario.txtCosto.setText(costo);
            }
            else if(p_tipo.equals("13"))
            {
                frmGuiaRemision.codigoProducto = Integer.parseInt(codigo);
                frmGuiaRemision.txtCodigoProducto.setText(codProducto);
                frmGuiaRemision.txtNombreProducto.setText(descripcion);
                frmGuiaRemision.txtStock.setText(stock);
                //frmGuiaRemision.txtDescuentoUnidad.setText(descuento);
                frmGuiaRemision.controlExistencia = control_existencia;
                frmGuiaRemision.txtCosto.setText(costo);
            }
            //CARGAR PRECIOS DEL PRODUCTO
           
            ArrayList<clsComboBox> dataPrecios = objPrecio.consultarPrecios(codigo);        
            try
            {   
                if(p_tipo.equals("1"))
                {
                    frmFacturar.cmbPrecio.removeAllItems();
                }
                else if(p_tipo.equals("2"))
                {
                    frmFactHisto.cmbPrecio.removeAllItems();
                }
                 else if(p_tipo.equals("3"))
                {
                    frmKardex.cmbPrecio.removeAllItems();
                }
                else if(p_tipo.equals("8"))
                {
                    frmDevolucionVenta.cmbPrecio.removeAllItems();
                }
                else if(p_tipo.equals("9"))
                {
                    frmNotasEntrega1.cmbPrecio.removeAllItems();
                }
                else if(p_tipo.equals("11"))
                {
                    frmNotasEntregaModificar.cmbPrecio.removeAllItems();
                }
                else if(p_tipo.equals("12"))
                {
                    frmInventario.cmbPrecio.removeAllItems();
                }
                else if(p_tipo.equals("13"))
                {
                    frmGuiaRemision.cmbPrecio.removeAllItems();
                }
                
                for(int i=0; i<dataPrecios.size(); i++)
                {
                    clsComboBox oItem = new clsComboBox(dataPrecios.get(i).getDescripcion(), dataPrecios.get(i).getCodigo() + " - " + dataPrecios.get(i).getDescripcion());
                    if(p_tipo.equals("1"))
                    {
                        frmFacturar.cmbPrecio.addItem(oItem);
                    } 
                    else if(p_tipo.equals("2"))
                    {
                        frmFactHisto.cmbPrecio.addItem(oItem);
                    }
                    else if(p_tipo.equals("3"))
                    {
                        frmKardex.cmbPrecio.addItem(oItem);
                    }
                    else if(p_tipo.equals("8"))
                    {
                        frmDevolucionVenta.cmbPrecio.addItem(oItem);
                    }
                    else if(p_tipo.equals("9"))
                    {
                        if((codigoClienteX==202)||(codigoClienteX==3054))
                        {
                            oItem = new clsComboBox(costo, "1 - " + costo);  
                            frmNotasEntrega1.cmbPrecio.addItem(oItem);
                        }
                        else
                        {
                            frmNotasEntrega1.cmbPrecio.addItem(oItem);
                        }
                    }
                    else if(p_tipo.equals("11"))
                    {
                        if((codigoClienteX==202)||(codigoClienteX==3054))
                        {
                            oItem = new clsComboBox(costo, "1 - " + costo); 
                            frmNotasEntregaModificar.cmbPrecio.addItem(oItem);
                        }
                        else
                        {
                            frmNotasEntregaModificar.cmbPrecio.addItem(oItem);
                        }
                            
                    }
                    else if(p_tipo.equals("12"))
                    {
                        frmInventario.cmbPrecio.addItem(oItem);
                    }
                    else if(p_tipo.equals("13"))
                    {
                        frmGuiaRemision.cmbPrecio.addItem(oItem);
                    }
                }
            }
            catch(NullPointerException e)
            {
                System.out.println(e.getMessage());
            }
            //frmFacturar.txtCantidad.requestFocus();
            if(p_tipo.equals("1"))
            {                
                frmFacturar.txtCantidad.setEditable(true);
                frmFacturar.txtCantidad.requestFocus();
            }
            else if(p_tipo.equals("2"))
            {                
                frmFactHisto.txtCantidad.setEditable(true);
                frmFactHisto.txtCantidad.requestFocus();
            }
            else if(p_tipo.equals("9"))
            {                
                frmNotasEntrega1.txtCantidad.setEditable(true);
                frmNotasEntrega1.txtCantidad.requestFocus();
            }
            else if(p_tipo.equals("11"))
            {                
                frmNotasEntregaModificar.txtCantidad.setEditable(true);
                frmNotasEntregaModificar.txtCantidad.requestFocus();
            }
            else if(p_tipo.equals("12"))
            {                
                frmInventario.txtCantidad.setEditable(true);
                frmInventario.txtCantidad.requestFocus();
            }
             else if(p_tipo.equals("13"))
            {                
                frmGuiaRemision.txtCantidad.setEditable(true);
                frmGuiaRemision.txtCantidad.requestFocus();
            }
                
            dispose();
        }
    }//GEN-LAST:event_tblDataMouseClicked

private void txtNombreProductoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreProductoKeyReleased
    //Vaciar datos de  tabla   
    int contRows = dtmData.getRowCount();
    for (int i = 0; i < contRows; i++)
    {
        dtmData.removeRow(0);
    }    
    
    ArrayList<clsProducto> dataProducto = objProducto.consultarDataProductoPorNombre(txtNombreProducto.getText().toUpperCase().toString()); 
    for(int i=0;i<dataProducto.size();i=i+1)
    {
         /*      
         ArrayList<clsComboBox> dataPrecios = objPrecio.consultarPrecios(dataProducto.get(i).getIdItems()); 
         if(dataPrecios.isEmpty())
            primerPrecio = "0";
         else
            primerPrecio = dataPrecios.get(0).getDescripcion();
         */     
         Object[] nuevaFila = {i+1, 
                                dataProducto.get(i).getCodItem(), 
                                dataProducto.get(i).getDesItem(),
                                dataProducto.get(i).getIdItems(), 
                                dataProducto.get(i).getCantStock(), 
                                dataProducto.get(i).getDescuento(),
                                dataProducto.get(i).getControlExistencia(),
                                dataProducto.get(i).getPrecio1(),
                                dataProducto.get(i).getCosto()};               
        dtmData.addRow(nuevaFila); 
    }
}//GEN-LAST:event_txtNombreProductoKeyReleased

private void txtPrecioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPrecioFocusGained
    txtNombreProducto.setText("");
}//GEN-LAST:event_txtPrecioFocusGained

private void txtPrecioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyReleased
    //Vaciar datos de  tabla   
    int contRows = dtmData.getRowCount();
    for (int i = 0; i < contRows; i++)
    {
        dtmData.removeRow(0);
    }    
    
    ArrayList<clsProducto> dataProducto = objProducto.consultarDataProductoPorPrecio(txtPrecio.getText()); 
    for(int i=0;i<dataProducto.size();i=i+1)
    {
         /*      
         ArrayList<clsComboBox> dataPrecios = objPrecio.consultarPrecios(dataProducto.get(i).getIdItems()); 
         if(dataPrecios.isEmpty())
            primerPrecio = "0";
         else
            primerPrecio = dataPrecios.get(0).getDescripcion();
         */     
         Object[] nuevaFila = {i+1, 
                                dataProducto.get(i).getCodItem(), 
                                dataProducto.get(i).getDesItem(),
                                dataProducto.get(i).getIdItems(), 
                                dataProducto.get(i).getCantStock(), 
                                dataProducto.get(i).getDescuento(),
                                dataProducto.get(i).getControlExistencia(),
                                dataProducto.get(i).getPrecio1(),
                                dataProducto.get(i).getCosto()};               
        dtmData.addRow(nuevaFila); 
    }
}//GEN-LAST:event_txtPrecioKeyReleased

private void txtNombreProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreProductoFocusGained
    txtPrecio.setText("");
}//GEN-LAST:event_txtNombreProductoFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmListProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmListProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmListProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmListProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                frmListProductos dialog = new frmListProductos(new javax.swing.JDialog(), true, new String(), 0);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblData;
    private javax.swing.JTextField txtNombreProducto;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
