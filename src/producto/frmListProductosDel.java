/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmListProductosDel.java
 *
 * Created on 04-jun-2012, 10:14:09
 */
package producto;

import clases.clsAuditoria;
import clases.clsProducto;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CKaiser
 */
public class frmListProductosDel extends javax.swing.JInternalFrame {
    clsProducto objProducto = new clsProducto();
    clsAuditoria objAuditoria = new clsAuditoria();
    
    MiModelo dtmData = new MiModelo();
    /** Creates new form frmListProductosDel */
    public frmListProductosDel() {
        initComponents();
        
        dtmData.addColumn("Nº");
        dtmData.addColumn("Codigo");
        dtmData.addColumn("Nombre");
        dtmData.addColumn("id_producto"); 
        dtmData.addColumn("stock"); 
        dtmData.addColumn("descuento");
        dtmData.addColumn("Control Existencia");
        dtmData.addColumn("PRECIO");
        dtmData.addColumn("ELIMINAR");
        
        llenarDatosProductos();
    }
    
    private void llenarDatosProductos()
    {
        ArrayList<clsProducto> dataProducto = objProducto.consultarDataProductosAll(); 
        for(int i=0;i<dataProducto.size();i=i+1)
        {
             /*      
             ArrayList<clsComboBox> dataPrecios = objPrecio.consultarPrecios(dataProducto.get(i).getIdItems()); 
             if(dataPrecios.isEmpty())
                primerPrecio = "0";
             else
                primerPrecio = dataPrecios.get(0).getDescripcion();
             */     
             Object[] nuevaFila = {i+1, 
                                    dataProducto.get(i).getCodItem(), 
                                    dataProducto.get(i).getDesItem(),
                                    dataProducto.get(i).getIdItems(), 
                                    dataProducto.get(i).getCantStock(), 
                                    dataProducto.get(i).getDescuento(),
                                    dataProducto.get(i).getControlExistencia(),
                                    "$ " + dataProducto.get(i).getPrecio1(),
                                    "ELIMINAR"
             };               
            dtmData.addRow(nuevaFila); 
        }
    }
    public class MiModelo extends DefaultTableModel
    {
            @Override
       public boolean isCellEditable (int row, int column)
       {
           // Aquí devolvemos true o false según queramos que una celda
           // identificada por fila,columna (row,column), sea o no editable
           if (column == 1)
           {
               return true;
           }   
           
           return false;
       }
    } 
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtNombreProducto = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(stinventario.STInventarioApp.class).getContext().getResourceMap(frmListProductosDel.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tblData.setModel(dtmData);
        tblData.setName("tblData"); // NOI18N
        tblData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblData);

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        txtNombreProducto.setName("txtNombreProducto"); // NOI18N
        txtNombreProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreProductoKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNombreProducto, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                        .addGap(164, 164, 164))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void tblDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataMouseClicked
        boolean exito = false;
        int fila = tblData.rowAtPoint(evt.getPoint());
        int columna = tblData.columnAtPoint(evt.getPoint());        
        if ((fila > -1) && (columna == 8)) 
        {
            int codigo = Integer.parseInt(""+tblData.getValueAt(fila,3));
            String codProducto = "" + tblData.getValueAt(fila,1);
            String descripcion = "" + tblData.getValueAt(fila,2);  
            //String stock = "" + tblData.getValueAt(fila,4);  
            //String descuento = "" + tblData.getValueAt(fila,5); 
            //String control_existencia = "" + tblData.getValueAt(fila,6); 
            
            int seleccion = JOptionPane.showOptionDialog(
                                    this, // Componente padre
                                    "¿Desea eliminar el producto: " + codProducto +" - " + descripcion + "?", //Mensaje
                                    "Seleccione una opción", // Título
                                    JOptionPane.YES_NO_CANCEL_OPTION,
                                    JOptionPane.QUESTION_MESSAGE,
                                    null,    // null para icono por defecto.
                                    new Object[] { "Si", "No"},    // null para YES, NO y CANCEL
                                    "Si");
            if (seleccion != -1)
            {
                if((seleccion + 1)==1)
                {
                    exito = objProducto.eliminarProducto(codigo);
                    if (exito)
                    {
                        JOptionPane.showMessageDialog(this, "Datos eliminados con éxito", "Atención!", JOptionPane.INFORMATION_MESSAGE);                
                        objAuditoria.insertarAuditoria("frmProductosDel", "ELIMINO PRODUCTO: "
                                                + codProducto
                                                + " - " + descripcion, "3");
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(this, "Error al ingresar la información", "Atención!", JOptionPane.ERROR_MESSAGE);
                        objAuditoria.insertarAuditoria("frmProductosDel", "INTENTÓ ELIMINAR PRODUCTO: "
                                                + codProducto
                                                + " - " + descripcion, "3");
                    }
                }
                else
                {
                    //JOptionPane.showMessageDialog(this, "NO", "Atención!", JOptionPane.ERROR_MESSAGE);
                }
            }
            //rellenar los datos
            int contRows = dtmData.getRowCount();
            for (int i = 0; i < contRows; i++)
            {
                dtmData.removeRow(0);
            }   
            
            llenarDatosProductos();
            this.txtNombreProducto.setText("");
        }
}//GEN-LAST:event_tblDataMouseClicked

private void txtNombreProductoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreProductoKeyReleased
     //Vaciar datos de  tabla
        String primerPrecio ="";
        int contRows = dtmData.getRowCount();
        for (int i = 0; i < contRows; i++)
        {
            dtmData.removeRow(0);
        }    
        ArrayList<clsProducto> dataProducto = objProducto.consultarDataProductoPorNombre(txtNombreProducto.getText().toUpperCase().toString()); 
        for(int i=0;i<dataProducto.size();i=i+1)
        {
             /*      
             ArrayList<clsComboBox> dataPrecios = objPrecio.consultarPrecios(dataProducto.get(i).getIdItems()); 
             if(dataPrecios.isEmpty())
                primerPrecio = "0";
             else
                primerPrecio = dataPrecios.get(0).getDescripcion();
             */     
             Object[] nuevaFila = {i+1, 
                                    dataProducto.get(i).getCodItem(), 
                                    dataProducto.get(i).getDesItem(),
                                    dataProducto.get(i).getIdItems(), 
                                    dataProducto.get(i).getCantStock(), 
                                    dataProducto.get(i).getDescuento(),
                                    dataProducto.get(i).getControlExistencia(),
                                    "$ " + dataProducto.get(i).getPrecio1(),
                                    "ELIMINAR"};               
            dtmData.addRow(nuevaFila); 
        }
}//GEN-LAST:event_txtNombreProductoKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblData;
    private javax.swing.JTextField txtNombreProducto;
    // End of variables declaration//GEN-END:variables
}
